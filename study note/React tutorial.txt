-arrow function
hello = function() {
  return "Hello World!";
}

hello = () => {
  return "Hello World!";
}

hello = () => "Hello World!";

-difference between regular and arrow function
'this' in regular function -> represent the object that called the function
ex) if an element called a 'car object''s function, 'this' reprenset the caller(element)
'this' in arrow function -> represent the object no matter who called the function 
ex) if an element called a 'car object''s function, 'this' represent the called object('car')

-variables (var, let, const)
var -> function scope, this variable is uasable unless as long as it is in function ex) any var variable in the function is valid regardless of block
let -> block scope, this variable is usable only if it is in the block ex) let variable in for loop is only valid in that loop
const -> block scope, this variable is almost same with let but const can't be changed once it defined

-React's goal is in many ways to render HTML in a web page. (one page can show multiple rendering)
two arguments of render function (HTML code(<App />), HTML element(document.getElementbyID('root'))

-react jsx
jsx -> javascript xml
jsx allows to write HTML elements in javascript and place them in the DOM without any createElement() or appendChild()
jsx converts html tags into react elements

-react components
components are like function that return html elements. it is independent and resuable bits of code
it serves same purpose as javascript function, but work in isolation and returns html via a render function
it has two type, class component and function component
the class component has to include 'extends React.Component' statement to inherit react features

-component constructor
constructor() function initiate the component's properties
also if you call super() function in constructor function block it will excecute parent's constructor function.

-components in files
react is all about re-using code. insert some of your components in separate files
create a .js extension file and import to use
ex) call 'App.js' file to use 'Car' component -> import Car from './App.js';

-react props
react props are lie function arguments in javascript and attributes in html
to send props into a component, use the same syntax as html attributes <h1 class="ford"></h1> = <Car brand="ford" />
props are how you pass data from one component to another, as parameters
if your component has a constructor fuction, the props should always be passed to the constructor and also to the React.Component via super() method.
constructor(props){
	super(props);
}

-react state
react component has a built-in state object
the state object is where you store property values that belongs to the component
when the state object changes, the component re-renders
the state object is initialized in the constructor
can change value in state object by using setState() method

-why arrow function?
In class components, the this keyword is not defined by default, 
so with regular functions the this keyword represents the object that called the method, 
which can be the global window object, a HTML button, or whatever.

